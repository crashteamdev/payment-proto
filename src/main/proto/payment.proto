syntax = "proto3";

package payment;

option java_multiple_files = true;
option java_outer_classname = "PaymentProto";
option java_package = "dev.crashteam.payment";

message PaymentCreateRequest {
  Amount amount = 1;
  Confirmation confirmation = 2;
  string description = 3;
  map<string, string> meta_data = 4;
}

message RecurrentPaymentCreateRequest {
  Amount amount = 1;
  Confirmation confirmation = 2;
  string description = 3;
  bool save_payment_method = 4;
  string payment_method_id = 5;
  map<string, string> meta_data = 6;
}

message PaymentRefundRequest {
  string payment_id = 1;
  Amount amount = 2;
}

message PaymentRefundResponse {
  string refund_id = 1;
  string payment_id = 2;
  Status status = 3;
  string created_at = 4;
  Amount amount = 5;
  CancellationDetails cancellation_details = 6;
}

message PaymentCancelRequest {
  Amount amount = 1;
  string payment_id = 2;
  map<string, string> meta_data = 3;
}

message PaymentCancelResponse {
  string id = 1;
  Status status = 2;
  Amount amount = 3;
  string payment_id = 4;
  map<string, string> meta_data = 5;
}

message PaymentCreateEvent {
  string payment_id = 1;
  string description = 2;
  string user_id = 3;
}

message PaymentRefundEvent {
  string payment_id = 1;
  string description = 2;
  string user_id = 3;
}

message PaymentPendingEvent {
  string payment_id = 1;
  string description = 2;
  string user_id = 3;
}

message PaymentCancelEvent {
  string payment_id = 1;
  string description = 2;
  string user_id = 3;
}

message PaymentEvent {
  oneof event {
    PaymentCreateEvent created = 1;
    PaymentPendingEvent pending = 2;
    PaymentCancelEvent cancel = 3;
  }
}

message PaymentResponse {
  string id = 1;
  Status status = 2;
  string paid = 3;
  Amount amount = 4;
  string created_at = 5;
  string description = 6;
  map<string, string> meta_data = 7;
}

message UserPayment {
  string payment_id = 1;
  string user_id = 2;
  Status status = 3;
  Amount amount = 4;
  string created_at = 5;
  string updated_at = 6;
}

message UserPaymentsResponse {
  repeated UserPayment user_payment = 1;
  LimitOffsetPaginationResult pagination = 2;
}

message Amount {
  string value = 1;
  string currency = 2;
}

message CancellationDetails {
  string party = 1;
  string reason = 2;
}

message Confirmation {
  string type = 1;
  string return_url = 2;
  string confirmation_url = 3;
}

message UserQuery {
  string user_id = 1;
  string date = 2;
  LimitOffsetPagination pagination = 3;
}

message LimitOffsetPagination {
  int64 limit = 1;
  int64 offset = 2;
}

message LimitOffsetPaginationResult {
  int64 limit = 1;
  int64 offset = 2;
  int64 totalOffset = 3;
}

enum Status {
  SUCCESS = 0;
  CANCELED = 1;
  PENDING = 2;
}

service PaymentService {
  rpc createPayment(PaymentCreateRequest) returns (PaymentResponse);
  rpc createRecurrentPayment(RecurrentPaymentCreateRequest) returns (PaymentResponse);
  rpc cancelPayment(PaymentCancelRequest) returns (PaymentCancelResponse);
  rpc getUserPayments(UserQuery) returns (UserPaymentsResponse);
  rpc refundPaymentRequest(PaymentRefundRequest) returns (PaymentRefundResponse);
}

