syntax = "proto3";

package payment;

import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option java_multiple_files = true;
option java_outer_classname = "PaymentProto";
option java_package = "dev.crashteam.payment";

message PaymentCreateRequest {
  string id = 6;
  Amount amount = 1;
  string return_url = 2;
  string description = 3;
  string user_id = 5;
  map<string, string> metadata = 4;
}

message RecurrentPaymentCreateRequest {
  string id = 8;
  Amount amount = 1;
  string return_url = 2;
  string description = 3;
  bool save_payment_method = 4;
  string payment_method_id = 5;
  string user_id = 7;
  map<string, string> metadata = 6;
}

message PaymentRefundRequest {
  string payment_id = 1;
  Amount amount = 2;
  string user_id = 4;
  map<string, string> metadata = 3;
}

message PaymentRefundResponse {
  string refund_id = 1;
  string payment_id = 2;
  PaymentStatus status = 3;
  string created_at = 4;
  Amount amount = 5;
  string details = 6;
  string user_id = 8;
  map<string, string> metadata = 7;
}

message PaymentCreated {
  string payment_id = 1;
  string user_id = 2;
  string description = 3;
  Amount amount = 4;
  google.protobuf.Timestamp created_at = 5;
  PaymentStatus status = 6;
}

message PaymentStatusChange {
  string payment_id = 1;
  PaymentStatus status = 2;
  google.protobuf.Timestamp updated_at = 3;
}

message PaymentRefund {
  string payment_id = 1;
  Amount refund_amount = 2;
  string description = 3;
}

message PaymentChange {
  oneof change {
    PaymentCreated payment_created = 1;
    PaymentStatusChange payment_status_changed = 2;
    PaymentRefund payment_refund = 3;
  }
}

message PaymentEvent {
  string event_id = 1;
  google.protobuf.Timestamp created_at = 10;
  message EventSource {
    oneof source {
      string payment_id = 1;
    }
  }
  EventSource event_source = 11;
  message EventPayload {
    oneof payload {
      PaymentChange payment_change = 1;
    }
  }
  EventPayload payload = 12;
}

message PaymentCreateResponse {
  string payment_id = 1;
  PaymentStatus status = 2;
  Amount amount = 3;
  google.protobuf.Timestamp created_at = 4;
  string description = 5;
  string confirmation_url = 6;
}

message PaymentRecurrentResponse {
  string payment_id = 1;
  PaymentStatus status = 2;
  Amount amount = 3;
  google.protobuf.Timestamp created_at = 4;
  string description = 5;
  string confirmation_url = 6;
}

message UserPayment {
  string payment_id = 1;
  string user_id = 2;
  PaymentStatus status = 3;
  Amount amount = 4;
  google.protobuf.Timestamp created_at = 5;
  google.protobuf.Timestamp updated_at = 6;
}

message PaymentsResponse {
  repeated UserPayment user_payment = 1;
  LimitOffsetPaginationResult pagination = 2;
}

message PaymentResponse {
  UserPayment user_payment = 1;
}

message Amount {
  int64 value = 1;
  string currency = 2; // ISO-4217 format
}

message DateTimeFilter {
  google.protobuf.Timestamp from = 1;
  google.protobuf.Timestamp to = 2;
}

message PaymentsQuery {
  string user_id = 1;
  google.protobuf.StringValue date_filter = 2;
  LimitOffsetPagination pagination = 3;
}

message PaymentQuery {
  string payment_id = 1;
}

message LimitOffsetPagination {
  int64 limit = 1;
  int64 offset = 2;
}

message LimitOffsetPaginationResult {
  int64 limit = 1;
  int64 offset = 2;
  int64 totalOffset = 3;
}

enum PaymentStatus {
  PENDING = 0;
  SUCCESS = 1;
  CANCELED = 2;
}

service PaymentService {
  rpc createPayment(PaymentCreateRequest) returns (PaymentCreateResponse);
  rpc createRecurrentPayment(RecurrentPaymentCreateRequest) returns (PaymentRecurrentResponse);
  rpc getPayments(PaymentsQuery) returns (PaymentsResponse);
  rpc getPayment(PaymentQuery) returns (PaymentResponse);
  rpc refundPayment(PaymentRefundRequest) returns (PaymentRefundResponse);
}

