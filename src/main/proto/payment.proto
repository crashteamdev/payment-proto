syntax = "proto3";

package payment;

import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option java_multiple_files = true;
option java_outer_classname = "PaymentProto";
option java_package = "dev.crashteam.payment";

enum PaymentSystem {
  PAYMENT_SYSTEM_UNKNOWN = 0;
  PAYMENT_SYSTEM_YOOKASSA = 1;
  PAYMENT_SYSTEM_FREEKASSA = 2;
  PAYMENT_SYSTEM_UZUM_BANK = 3;
  PAYMENT_SYSTEM_CLICK = 4;
  PAYMENT_SYSTEM_LAVA = 5;
  PAYMENT_SYSTEM_ENOT = 6;
}

enum PaymentCurrency {
  PAYMENT_CURRENCY_UNKNOWN = 0;
  PAYMENT_CURRENCY_USD = 1;
}

message PaymentCreateRequest {
  oneof payment {
    PaymentDepositUserBalance payment_deposit_user_balance = 1;
    PaymentPurchaseService payment_purchase_service = 2;
  }
  message PaymentDepositUserBalance {
    int64 amount = 1;
    PaymentCurrency currency = 2;
    string user_id = 3;
    string description = 4;
    PaymentSystem payment_system = 5;
    string return_url = 6;
    optional string user_email = 7;
    optional string user_phone = 8;
  }
  message PaymentPurchaseService {
    string user_id = 1;
    string description = 2;
    PaymentSystem payment_system = 3;
    PaidService paid_service = 4 [deprecated = true];
    repeated PaidService paid_services = 10;
    string return_url = 5;
    optional string promo_code = 7;
    optional string user_email = 8;
    optional string user_phone = 9;
  }
  map<string, string> metadata = 3;
}

message RecurrentPaymentCreateRequest {
  int64 amount = 1;
  PaymentCurrency currency = 10;
  string return_url = 2;
  string description = 3;
  bool save_payment_method = 4;
  string payment_method_id = 5;
  string user_id = 7;
  PaymentSystem payment_system = 9;
  optional PaidService paid_service = 8;
  map<string, string> metadata = 6;
}

message PaymentRefundRequest {
  string payment_id = 1;
  int64 amount = 2;
  string user_id = 4;
  map<string, string> metadata = 3;
}

message PaymentRefundResponse {
  string refund_id = 1;
  string payment_id = 2;
  PaymentStatus status = 3;
  string created_at = 4;
  Amount amount = 5;
  string details = 6;
  string user_id = 8;
  map<string, string> metadata = 7;
}

message PaymentCreated {
  string payment_id = 1;
  string user_id = 2;
  string description = 3;
  Amount amount = 4;
  google.protobuf.Timestamp created_at = 5;
  PaymentStatus status = 6;
  optional UserPaidService user_paid_service = 7;
}

message PaymentStatusChange {
  string payment_id = 1;
  PaymentStatus status = 2;
  google.protobuf.Timestamp updated_at = 3;
}

message PaymentRefund {
  string payment_id = 1;
  Amount refund_amount = 2;
  string description = 3;
}

message PaymentChange {
  oneof change {
    PaymentCreated payment_created = 1;
    PaymentStatusChange payment_status_changed = 2;
    PaymentRefund payment_refund = 3;
  }
}

message PaymentCreateResponse {
  string payment_id = 1;
  PaymentStatus status = 2;
  Amount amount = 3;
  google.protobuf.Timestamp created_at = 4;
  string description = 5;
  string confirmation_url = 6;
  PaymentSystem payment_system = 7;
}

message PaymentRecurrentResponse {
  string payment_id = 1;
  PaymentStatus status = 2;
  Amount amount = 3;
  google.protobuf.Timestamp created_at = 4;
  string description = 5;
  string confirmation_url = 6;
}

message UserPayment {
  string payment_id = 1;
  string user_id = 2;
  PaymentStatus status = 3;
  Amount amount = 4;
  google.protobuf.Timestamp created_at = 5;
  google.protobuf.Timestamp updated_at = 6;
  PaymentSystem payment_system = 7;
}

message PaymentsResponse {
  repeated UserPayment user_payment = 1;
  LimitOffsetPaginationResult pagination = 2;
}

message PaymentResponse {
  UserPayment user_payment = 1;
}

message BalanceAmount {
  int64 value = 1;
}

message Amount {
  int64 value = 1;
  string currency = 2; // ISO-4217 format
}

message DateTimeFilter {
  google.protobuf.Timestamp from = 1;
  google.protobuf.Timestamp to = 2;
}

message PaymentsQuery {
  string user_id = 1;
  google.protobuf.StringValue date_from = 2; //  ISO Date Format "yyyy-MM-dd"
  google.protobuf.StringValue date_to = 4;
  LimitOffsetPagination pagination = 3;
}

message PaymentQuery {
  string payment_id = 1;
}

message LimitOffsetPagination {
  int64 limit = 1;
  int64 offset = 2;
}

message LimitOffsetPaginationResult {
  int64 limit = 1;
  int64 offset = 2;
  int64 totalOffset = 3;
}

enum PaymentStatus {
  PAYMENT_STATUS_UNKNOWN = 0;
  PAYMENT_STATUS_PENDING = 1;
  PAYMENT_STATUS_SUCCESS = 2;
  PAYMENT_STATUS_CANCELED = 3;
  PAYMENT_STATUS_FAILED = 4;
}

message UzumAnalyticsContext {
  UzumAnalyticsPlan plan = 1;
  message UzumAnalyticsPlan {
    oneof plan {
      UzumAnalyticsDefaultPlan default_plan = 10;
      UzumAnalyticsAdvancedPlan advanced_plan = 11;
      UzumAnalyticsProPlan pro_plan = 12;
    }
    message UzumAnalyticsDefaultPlan {}
    message UzumAnalyticsAdvancedPlan {}
    message UzumAnalyticsProPlan {}
  }
}

message KeAnalyticsContext {
  KeAnalyticsPlan plan = 1;
  message KeAnalyticsPlan {
    oneof plan {
      KeAnalyticsDefaultPlan default_plan = 10;
      KeAnalyticsAdvancedPlan advanced_plan = 11;
      KeAnalyticsProPlan pro_plan = 12;
    }
    message KeAnalyticsDefaultPlan {}
    message KeAnalyticsAdvancedPlan {}
    message KeAnalyticsProPlan {}
  }
}

message UzumRepricerContext {
  UzumRepricerPlan plan = 1;
  message UzumRepricerPlan {
    oneof plan {
      UzumRepricerDefaultPlan default_plan = 10;
    }
    message UzumRepricerDefaultPlan {}
  }
}

message KeRepricerContext {
  KeRepricerPlan plan = 1;
  message KeRepricerPlan {
    oneof plan {
      KeRepricerDefaultPlan default_plan = 10;
    }
    message KeRepricerDefaultPlan {}
  }
}

message PaidServiceContext {
  // An indication of how many months are paid for
  int64 multiply = 1;
  oneof context {
    UzumAnalyticsContext uzum_analytics_context = 10;
    KeAnalyticsContext ke_analytics_context = 11;
    UzumRepricerContext uzum_repricer_context = 12;
    KeRepricerContext ke_repricer_context = 13;
  }
}

message DiscountPromoCodeContext {
  int32 discount_percentage = 1;
}

message PromoCodeContext {
  oneof context {
    DiscountPromoCodeContext discount_promocode_context = 1;
  }
}

message PromoCode {
  string code = 1;
  google.protobuf.Timestamp valid_until = 2;
  int32 usage_limit = 3;
  PromoCodeContext promo_code_context = 4;
  string description = 5;
}

message CreatePromoCodeRequest {
  string description = 1;
  google.protobuf.Timestamp valid_until = 2;
  int32 usage_limit = 3;
  PromoCodeContext promo_code_context = 5;
  optional string prefix = 6;
}

message CreatePromoCodeResponse {
  PromoCode promo_code = 1;
}

message CheckPromoCodeRequest {
  string promo_code = 1;
}

message CheckPromoCodeResponse {
  oneof response {
    SuccessResponse success_response = 1;
    ErrorResponse error_response = 2;
  }

  message SuccessResponse {
    string promo_code = 1;
  }

  message ErrorResponse {
    ErrorCode errorCode = 1;
    optional string description = 2;

    enum ErrorCode {
      ERROR_CODE_UNKNOWN = 0;
      ERROR_CODE_EXPIRED_PROMO_CODE = 1;
      ERROR_CODE_MAX_USAGE_LIMIT = 2;
      ERROR_CODE_NOT_FOUND = 3;
      ERROR_CODE_ALREADY_USED = 4;
    }
  }
}

message UserPaidService {
  string user_id = 1;
  PaidService paid_service = 2;
  repeated PaidService paid_services = 3;
}

message PaidService {
    PaidServiceContext context = 1;
}

message PurchaseServiceRequest {
  string operation_id = 1;
  string user_id = 2;
  PaidService paid_service = 3 [deprecated = true];
  repeated PaidService paid_services = 4;
}

message PurchaseServiceResponse {
  oneof response {
      SuccessResponse success_response = 1;
      ErrorResponse error_response = 2;
  }

  message SuccessResponse {
    string operation_id = 1;
    BalanceAmount user_balance_amount = 2;
  }

  message ErrorResponse {
    ErrorCode errorCode = 1;
    optional string description = 2;
    BalanceAmount user_balance_amount = 3;

    enum ErrorCode {
      ERROR_CODE_UNKNOWN = 0;
      ERROR_CODE_INSUFFICIENT_FUNDS = 1;
    }
  }
}

message GetBalanceRequest {
  string user_id = 1;
}

message GetBalanceResponse {
  string user_id = 1;
  BalanceAmount amount = 2;
}

message GetExchangeRateRequest {
  string currency = 1;
}

message GetExchangeRateResponse {
  string pair = 1;
  string exchangeRate = 2;
}

message PaymentEvent {
  string event_id = 1;
  google.protobuf.Timestamp created_at = 10;
  message EventSource {
    oneof source {
      string payment_id = 1;
    }
  }
  EventSource event_source = 11;
  message EventPayload {
    oneof payload {
      PaymentChange payment_change = 1;
    }
  }
  EventPayload payload = 12;
}

service PaymentService {
  rpc createPayment(PaymentCreateRequest) returns (PaymentCreateResponse);
  //  rpc createRecurrentPayment(RecurrentPaymentCreateRequest) returns (PaymentRecurrentResponse);
  rpc getPayments(PaymentsQuery) returns (PaymentsResponse);
  rpc getPayment(PaymentQuery) returns (PaymentResponse);
  //  rpc refundPayment(PaymentRefundRequest) returns (PaymentRefundResponse);
  rpc createPromoCode(CreatePromoCodeRequest) returns (CreatePromoCodeResponse);
  rpc checkPromoCode(CheckPromoCodeRequest) returns (CheckPromoCodeResponse);
  rpc purchaseService(PurchaseServiceRequest) returns (PurchaseServiceResponse);
  rpc getBalance(GetBalanceRequest) returns (GetBalanceResponse);
  rpc getExchangeRate(GetExchangeRateRequest) returns (GetExchangeRateResponse);
}

